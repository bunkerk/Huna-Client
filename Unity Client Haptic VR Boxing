using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using System;
using System.IO;
using System.Net;
using System.Net.Sockets;
using System.Text;

public class Lefthandmove : MonoBehaviour
{
    Socket mySocket;
    String Host = "192.168.1.4";
    int Port = 1234;
    byte[] bytes = new byte[1024];
    public Transform lefthand;

    // Start is called before the first frame update
    void Start()
    {

    }

    void Update()
    {
        try
        {
            IPEndPoint ep = new IPEndPoint(IPAddress.Parse("192.168.1.4"), 1234);
            mySocket = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);
            mySocket.Connect(ep);
            int bytesRec = mySocket.Receive(bytes);
            string s = System.Text.Encoding.UTF8.GetString(bytes);
            string[] strings = s.Split(':');
            Vector3 vector = new Vector3(float.Parse(strings[2]), float.Parse(strings[1]), float.Parse(strings[0]));
            lefthand.position = vector;
            byte[] msg = Encoding.ASCII.GetBytes("recieved position left");
            mySocket.Send(msg);
            mySocket.Close();
        }
        catch (Exception e)
        {
            Debug.Log("Socket error: " + e);
        }
    }

    //Detects Collision start and sends "T1" to server
    public void OnCollisionEnter(Collision collision)
    {
        try
        {
            IPEndPoint ep = new IPEndPoint(IPAddress.Parse("192.168.1.4"), 1234);
            mySocket = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);
            mySocket.Connect(ep);
            int bytesRec = mySocket.Receive(bytes);
            Debug.Log(Encoding.ASCII.GetString(bytes, 0, bytesRec));
            byte[] msg = Encoding.ASCII.GetBytes("T2");
            mySocket.Send(msg);
            mySocket.Close();
        }
        catch (Exception e)
        {
            Debug.Log("Socket error: " + e);
        }

    }

    //Detects Collision stop and sends "F1" to server
    public void OnCollisionExit(Collision collision)
    {
        try
        {
            IPEndPoint ep = new IPEndPoint(IPAddress.Parse("192.168.1.4"), 1234);
            mySocket = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);
            mySocket.Connect(ep);
            int bytesRec = mySocket.Receive(bytes);
            Debug.Log(Encoding.ASCII.GetString(bytes, 0, bytesRec));
            byte[] msg = Encoding.ASCII.GetBytes("F2");
            mySocket.Send(msg);
            mySocket.Close();
        }
        catch (Exception e)
        {
            Debug.Log("Socket error: " + e);
        }

    }
}
---------------------------------------------------------------------------------------------
using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using System;
using System.IO;
using System.Net;
using System.Net.Sockets;
using System.Text;

public class Righthandmove : MonoBehaviour
{
    Socket mySocket;
    String Host = "192.168.1.4";
    int Port = 1234;
    byte[] bytes = new byte[1024];
    public Transform righthand;
    public Vector3 cam;

    // Start is called before the first frame update
    void Start()
    {

    }

    void Update()
    {
        try
        {
            IPEndPoint ep = new IPEndPoint(IPAddress.Parse("192.168.1.4"), 1234);
            mySocket = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);
            mySocket.Connect(ep);
            int bytesRec = mySocket.Receive(bytes);
            string s = System.Text.Encoding.UTF8.GetString(bytes);
            string[] strings = s.Split(':');
            Vector3 vector = new Vector3(float.Parse(strings[5]), float.Parse(strings[4]), float.Parse(strings[3]));
            righthand.position = vector;
            byte[] msg = Encoding.ASCII.GetBytes("recieved position right");
            mySocket.Send(msg);
            mySocket.Close();

        }
        catch (Exception e)
        {
            Debug.Log("Socket error: " + e);
        }
    }

    //Detects Collision start and sends "T1" to server
    public void OnCollisionEnter(Collision collision)
    {
        try
        {
            IPEndPoint ep = new IPEndPoint(IPAddress.Parse("192.168.1.4"), 1234);
            mySocket = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);
            mySocket.Connect(ep);
            int bytesRec = mySocket.Receive(bytes);
            Debug.Log(Encoding.ASCII.GetString(bytes, 0, bytesRec));
            byte[] msg = Encoding.ASCII.GetBytes("T1");
            mySocket.Send(msg);
            mySocket.Close();
        }
        catch (Exception e)
        {
            Debug.Log("Socket error: " + e);
        }

    }

    //Detects Collision stop and sends "F1" to server
    public void OnCollisionExit(Collision collision)
    {
        try
        {
            IPEndPoint ep = new IPEndPoint(IPAddress.Parse("192.168.1.4"), 1234);
            mySocket = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);
            mySocket.Connect(ep);
            int bytesRec = mySocket.Receive(bytes);
            Debug.Log(Encoding.ASCII.GetString(bytes, 0, bytesRec));
            byte[] msg = Encoding.ASCII.GetBytes("F1");
            mySocket.Send(msg);
            mySocket.Close();
        }
        catch (Exception e)
        {
            Debug.Log("Socket error: " + e);
        }

    }
}
---------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Net;
using System.Net.Sockets;
using System.Text;
using UnityEngine;

public class Playermove : MonoBehaviour
{

    Socket mySocket;
    String Host = "192.168.1.4";
    int Port = 1234;
    byte[] bytes = new byte[1024];
    public Transform FOV;
    private Vector3 offset;
    

    // Start is called before the first frame update
    void Start()
    {

    }

    // Update is called once per frame
    void Update()
    {
        try
        {
            IPEndPoint ep = new IPEndPoint(IPAddress.Parse("192.168.1.4"), 1234);
            mySocket = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);
            mySocket.Connect(ep);
            int bytesRec = mySocket.Receive(bytes);
            string s = System.Text.Encoding.ASCII.GetString(bytes, 0, bytesRec);
            string[] strings = s.Split(':');
            string forward = strings[6];
            string side = strings[7];
            if (forward.Equals("F"))
            {
                offset.z = 1;
            }
            else if (forward.Equals("B"))
            {
                offset.z = -1;
            }
            else if (forward.Equals("N"))
            {
                offset.z = 0;
            }
            if (forward.Equals("R"))
            {
                offset.x = 1;
            }
            else if (forward.Equals("L"))
            {
                offset.x = -1;
            }
            else if (forward.Equals("N"))
            {
                offset.x = 0;
            }
            transform.position = FOV.position + offset;
            byte[] msg = Encoding.ASCII.GetBytes("recieved");

            mySocket.Send(msg);
            mySocket.Close();
        }

        catch (Exception e)
        {
            Debug.Log("Socket error: " + e);
        }
        
    }

}
